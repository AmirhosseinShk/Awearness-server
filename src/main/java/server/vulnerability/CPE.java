package server.vulnerability;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;


public class CPE {
    /**
     * The id of the CPE in the database
     */
    public int id = 0;

    /**
     * The CPE identifier : "cpe:/..."
     */
    public String cpe_id = "";

    /**
     * Instantiates a new CPE.
     *
     * @param cpe_id the cpe _ id
     */
    public CPE(String cpe_id) {
        this.cpe_id = cpe_id;
    }

    /**
     * Get all vulnerabilities related to this cpe in the Database
     *
     * @param conn The database Connection
     * @return a list of vulnerabilities related to this CPE
     * @throws Exception the exception
     */
    public List<Vulnerability> getVulnerabilities(Connection conn) throws Exception {
        List<Vulnerability> result = new ArrayList<Vulnerability>();
        if (this.inDatabase(conn)) {
            PreparedStatement pstmt = conn.prepareStatement("SELECT id_vulnerability FROM cpe_vulnerability WHERE id_cpe = ?");
            pstmt.setInt(1, id);
            pstmt.execute();
            ResultSet res = pstmt.getResultSet();
            while (res.next()) { //Get all the rules that are related to this vulnerability
                Vulnerability vulnerability = new Vulnerability(conn, res.getInt(1));
                result.add(vulnerability);
            }
        }
        return result;
    }

    /**
     * Find whether or not the CPE is in the database
     *
     * @param conn the database connection
     * @return true if the CPE is in the database, else false
     * @throws java.sql.SQLException the sQL exception
     */
    public boolean inDatabase(Connection conn) throws SQLException {
        PreparedStatement pstmt = conn.prepareStatement("SELECT id,cpe_id FROM cpe WHERE cpe_id LIKE ?");
        pstmt.setString(1, this.cpe_id);
        pstmt.execute();
        ResultSet res = pstmt.getResultSet();
        boolean result = res.next();
        if (result) { //This CPE is already in the DB
            //We get the id of this CPE
            id = res.getInt(1);
        }
        pstmt.close();
        res.close();
        return result;
    }

    /**
     * Save the cpe in the database
     *
     * @param conn The database connection
     * @throws Exception the exception
     */
    public void saveToDatabase(Connection conn) throws Exception {
        if (cpe_id.isEmpty()) {
            return;
        }

        if (!inDatabase(conn)) { //This cpe is not yet in the DB, so we had it
            PreparedStatement pstmt = conn.prepareStatement("INSERT INTO cpe (cpe_id) VALUES(?)");
            pstmt.setString(1, cpe_id);
            pstmt.execute();
            ResultSet resultSetId = pstmt.getGeneratedKeys();
            id = resultSetId.getInt(1);
            resultSetId.close();
        }
    }

}
